<?php

namespace {{namespace}}\Services\Command\{{nomDeDomaine}};

use {{namespace}}\Services\Domain\{{nomDeDomaine}}\{{nomDeDomaine}}Domain;
use {{namespace}}\Services\Persistence\Ecriture\{{nomDeDomaine}}\{{nomDeDomaine}}Repository;
use Starkerxp\CQRSESBundle\Services\Command\CommandHandlerInterface;
use Starkerxp\CQRSESBundle\Services\Command\CommandInterface;
use Rhumsaa\Uuid\Uuid;

class Creation{{nomDeDomaine}}Handler implements CommandHandlerInterface
{

    /**
     * @var {{nomDeDomaine}}Repository
     */
    private ${{nomDeDomaineMinuscule}}Repository;

    public function __construct({{nomDeDomaine}}Repository ${{nomDeDomaineMinuscule}}Repository)
    {
        $this->{{nomDeDomaineMinuscule}}Repository = ${{nomDeDomaineMinuscule}}Repository;
    }

    /**
     * Déclenche la commande afin de créer une nouvelle {{nomDeDomaineMinuscule}}.
     *
     * @param CommandInterface $command
     *
     * @return void
     */
    public function handle(CommandInterface $command)
    {
        $uuid = Uuid::uuid4()->toString();
        $nouvelle{{nomDeDomaine}} = {{nomDeDomaine}}Domain::cree($uuid, $command->getLibelle());
        $this->{{nomDeDomaineMinuscule}}Repository->ajouter($nouvelle{{nomDeDomaine}});
        // Déclenchement des listeners  pour le traitement post création;
    }

}
